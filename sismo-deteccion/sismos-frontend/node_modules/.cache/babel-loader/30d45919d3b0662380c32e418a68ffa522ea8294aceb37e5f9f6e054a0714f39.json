{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\Documentos\\\\Java\\\\Practicas-Ing-software\\\\sismo-deteccion\\\\sismos-frontend\\\\src\\\\components\\\\UploadCSV.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport API_URL from \"../config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadCSV = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setMessage(\"Selecciona un archivo CSV.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      await axios.post(`${API_URL}/cargar`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setMessage(\"Archivo subido con éxito.\");\n    } catch (error) {\n      setMessage(\"Error al subir el archivo.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Subir CSV de Sismos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Subir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(UploadCSV, \"90rxx89DAeVfO1aRLt0hivI8MC0=\");\n_c = UploadCSV;\nexport default UploadCSV;\nvar _c;\n$RefreshReg$(_c, \"UploadCSV\");","map":{"version":3,"names":["React","useState","axios","API_URL","jsxDEV","_jsxDEV","UploadCSV","_s","file","setFile","message","setMessage","handleFileChange","event","target","files","handleUpload","formData","FormData","append","post","headers","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/Documentos/Java/Practicas-Ing-software/sismo-deteccion/sismos-frontend/src/components/UploadCSV.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../config\";\r\n\r\nconst UploadCSV = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleUpload = async () => {\r\n        if (!file) {\r\n            setMessage(\"Selecciona un archivo CSV.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        try {\r\n            await axios.post(`${API_URL}/cargar`, formData, {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" },\r\n            });\r\n            setMessage(\"Archivo subido con éxito.\");\r\n        } catch (error) {\r\n            setMessage(\"Error al subir el archivo.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Subir CSV de Sismos</h2>\r\n            <input type=\"file\" accept=\".csv\" onChange={handleFileChange} />\r\n            <button onClick={handleUpload}>Subir</button>\r\n            {message && <p>{message}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UploadCSV;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;IAChCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACR,IAAI,EAAE;MACPG,UAAU,CAAC,4BAA4B,CAAC;MACxC;IACJ;IAEA,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;IAE7B,IAAI;MACA,MAAMN,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,SAAS,EAAEc,QAAQ,EAAE;QAC5CI,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACrD,CAAC,CAAC;MACFV,UAAU,CAAC,2BAA2B,CAAC;IAC3C,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZX,UAAU,CAAC,4BAA4B,CAAC;IAC5C;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAkB,QAAA,gBACIlB,OAAA;MAAAkB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,MAAM;MAACC,QAAQ,EAAElB;IAAiB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/DtB,OAAA;MAAQ0B,OAAO,EAAEf,YAAa;MAAAO,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC5CjB,OAAO,iBAAIL,OAAA;MAAAkB,QAAA,EAAIb;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEd,CAAC;AAACpB,EAAA,CAnCID,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}