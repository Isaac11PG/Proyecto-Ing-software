{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\OneDrive\\\\Documentos\\\\Java\\\\Practicas-Ing-software\\\\sismo-deteccion\\\\sismos-frontend\\\\src\\\\components\\\\GrafoVisualizacion.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { Network } from 'vis-network';\nimport { DataSet } from 'vis-data';\nimport axios from 'axios';\nimport API_URL from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GrafoVisualizacion = () => {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const networkContainer = useRef(null);\n  const networkInstance = useRef(null);\n  useEffect(() => {\n    const fetchGraphData = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(`${API_URL.replace('/sismos', '')}/grafos/visualizacion`);\n        const {\n          nodes,\n          edges\n        } = response.data;\n\n        // Configurar opciones de visualización\n        const options = {\n          nodes: {\n            shape: 'dot',\n            size: 16,\n            font: {\n              size: 12,\n              color: '#000000'\n            },\n            borderWidth: 2\n          },\n          edges: {\n            width: 1,\n            font: {\n              size: 10,\n              align: 'middle'\n            },\n            color: {\n              inherit: 'from'\n            },\n            arrows: {\n              to: {\n                enabled: true,\n                scaleFactor: 0.5\n              }\n            }\n          },\n          groups: {\n            sismo: {\n              color: {\n                background: '#97C2FC',\n                border: '#2B7CE9'\n              },\n              shape: 'dot'\n            },\n            ubicacion: {\n              color: {\n                background: '#FB7E81',\n                border: '#FA0010'\n              },\n              shape: 'diamond'\n            }\n          },\n          physics: {\n            enabled: true,\n            hierarchicalRepulsion: {\n              centralGravity: 0.5,\n              springLength: 150,\n              springConstant: 0.01,\n              nodeDistance: 120,\n              damping: 0.09\n            },\n            solver: 'hierarchicalRepulsion'\n          }\n        };\n\n        // Crear datasets para vis.js\n        const nodesDataset = new DataSet(nodes);\n        const edgesDataset = new DataSet(edges);\n\n        // Crear y renderizar la red\n        if (networkContainer.current) {\n          // Destruir la instancia anterior si existe\n          if (networkInstance.current) {\n            networkInstance.current.destroy();\n          }\n          networkInstance.current = new Network(networkContainer.current, {\n            nodes: nodesDataset,\n            edges: edgesDataset\n          }, options);\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al cargar datos del grafo:', error);\n        setError('Error al cargar los datos del grafo. Por favor, intenta de nuevo más tarde.');\n        setLoading(false);\n      }\n    };\n    fetchGraphData();\n\n    // Limpiar al desmontar\n    return () => {\n      if (networkInstance.current) {\n        networkInstance.current.destroy();\n      }\n    };\n  }, []);\n  const cargarDatosExistentes = async () => {\n    try {\n      setLoading(true);\n      await axios.post(`${API_URL.replace('/sismos', '')}/grafos/cargar-existentes`);\n      // Recargar la visualización\n      window.location.reload();\n    } catch (error) {\n      console.error('Error al cargar datos existentes a Neo4j:', error);\n      setError('Error al cargar datos existentes a Neo4j.');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Visualizaci\\xF3n de Grafos de Sismos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: cargarDatosExistentes,\n      disabled: loading,\n      style: {\n        padding: '10px 15px',\n        margin: '10px 0',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      children: loading ? 'Cargando...' : 'Cargar Datos Existentes a Neo4j'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        margin: '10px 0'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 23\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando visualizaci\\xF3n del grafo...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: networkContainer,\n      style: {\n        width: '100%',\n        height: '600px',\n        border: '1px solid #ddd',\n        borderRadius: '4px',\n        backgroundColor: '#f8f8f8'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Leyenda\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#2B7CE9'\n            },\n            children: \"\\u25CF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), \" Sismos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#FA0010'\n            },\n            children: \"\\u25C6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), \" Ubicaciones\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#2B7CE9'\n            },\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), \" CERCANO_A: Sismos cercanos geogr\\xE1ficamente\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#2B7CE9'\n            },\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), \" SIMILAR_MAGNITUD: Sismos con magnitud similar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#2B7CE9'\n            },\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), \" OCURRIDO_EN: Relaci\\xF3n entre sismo y ubicaci\\xF3n\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n};\n_s(GrafoVisualizacion, \"Y2F1W2XICGqXg6FbR9WGuhNWrH0=\");\n_c = GrafoVisualizacion;\nexport default GrafoVisualizacion;\nvar _c;\n$RefreshReg$(_c, \"GrafoVisualizacion\");","map":{"version":3,"names":["React","useEffect","useState","useRef","Network","DataSet","axios","API_URL","jsxDEV","_jsxDEV","GrafoVisualizacion","_s","loading","setLoading","error","setError","networkContainer","networkInstance","fetchGraphData","response","get","replace","nodes","edges","data","options","shape","size","font","color","borderWidth","width","align","inherit","arrows","to","enabled","scaleFactor","groups","sismo","background","border","ubicacion","physics","hierarchicalRepulsion","centralGravity","springLength","springConstant","nodeDistance","damping","solver","nodesDataset","edgesDataset","current","destroy","console","cargarDatosExistentes","post","window","location","reload","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","padding","margin","backgroundColor","borderRadius","cursor","ref","height","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/anton/OneDrive/Documentos/Java/Practicas-Ing-software/sismo-deteccion/sismos-frontend/src/components/GrafoVisualizacion.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { Network } from 'vis-network';\r\nimport { DataSet } from 'vis-data';\r\nimport axios from 'axios';\r\nimport API_URL from '../config';\r\n\r\nconst GrafoVisualizacion = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const networkContainer = useRef(null);\r\n    const networkInstance = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const fetchGraphData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                const response = await axios.get(`${API_URL.replace('/sismos', '')}/grafos/visualizacion`);\r\n                \r\n                const { nodes, edges } = response.data;\r\n                \r\n                // Configurar opciones de visualización\r\n                const options = {\r\n                    nodes: {\r\n                        shape: 'dot',\r\n                        size: 16,\r\n                        font: {\r\n                            size: 12,\r\n                            color: '#000000'\r\n                        },\r\n                        borderWidth: 2\r\n                    },\r\n                    edges: {\r\n                        width: 1,\r\n                        font: {\r\n                            size: 10,\r\n                            align: 'middle'\r\n                        },\r\n                        color: { inherit: 'from' },\r\n                        arrows: {\r\n                            to: { enabled: true, scaleFactor: 0.5 }\r\n                        }\r\n                    },\r\n                    groups: {\r\n                        sismo: {\r\n                            color: { background: '#97C2FC', border: '#2B7CE9' },\r\n                            shape: 'dot'\r\n                        },\r\n                        ubicacion: {\r\n                            color: { background: '#FB7E81', border: '#FA0010' },\r\n                            shape: 'diamond'\r\n                        }\r\n                    },\r\n                    physics: {\r\n                        enabled: true,\r\n                        hierarchicalRepulsion: {\r\n                            centralGravity: 0.5,\r\n                            springLength: 150,\r\n                            springConstant: 0.01,\r\n                            nodeDistance: 120,\r\n                            damping: 0.09\r\n                        },\r\n                        solver: 'hierarchicalRepulsion'\r\n                    }\r\n                };\r\n                \r\n                // Crear datasets para vis.js\r\n                const nodesDataset = new DataSet(nodes);\r\n                const edgesDataset = new DataSet(edges);\r\n                \r\n                // Crear y renderizar la red\r\n                if (networkContainer.current) {\r\n                    // Destruir la instancia anterior si existe\r\n                    if (networkInstance.current) {\r\n                        networkInstance.current.destroy();\r\n                    }\r\n                    \r\n                    networkInstance.current = new Network(\r\n                        networkContainer.current,\r\n                        { nodes: nodesDataset, edges: edgesDataset },\r\n                        options\r\n                    );\r\n                }\r\n                \r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error al cargar datos del grafo:', error);\r\n                setError('Error al cargar los datos del grafo. Por favor, intenta de nuevo más tarde.');\r\n                setLoading(false);\r\n            }\r\n        };\r\n        \r\n        fetchGraphData();\r\n        \r\n        // Limpiar al desmontar\r\n        return () => {\r\n            if (networkInstance.current) {\r\n                networkInstance.current.destroy();\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const cargarDatosExistentes = async () => {\r\n        try {\r\n            setLoading(true);\r\n            await axios.post(`${API_URL.replace('/sismos', '')}/grafos/cargar-existentes`);\r\n            // Recargar la visualización\r\n            window.location.reload();\r\n        } catch (error) {\r\n            console.error('Error al cargar datos existentes a Neo4j:', error);\r\n            setError('Error al cargar datos existentes a Neo4j.');\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Visualización de Grafos de Sismos</h2>\r\n            \r\n            <button \r\n                onClick={cargarDatosExistentes}\r\n                disabled={loading}\r\n                style={{\r\n                    padding: '10px 15px',\r\n                    margin: '10px 0',\r\n                    backgroundColor: '#4CAF50',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer'\r\n                }}\r\n            >\r\n                {loading ? 'Cargando...' : 'Cargar Datos Existentes a Neo4j'}\r\n            </button>\r\n            \r\n            {error && <div style={{ color: 'red', margin: '10px 0' }}>{error}</div>}\r\n            \r\n            {loading && <div>Cargando visualización del grafo...</div>}\r\n            \r\n            <div \r\n                ref={networkContainer} \r\n                style={{ \r\n                    width: '100%', \r\n                    height: '600px',\r\n                    border: '1px solid #ddd',\r\n                    borderRadius: '4px',\r\n                    backgroundColor: '#f8f8f8' \r\n                }}\r\n            ></div>\r\n            \r\n            <div style={{ marginTop: '20px' }}>\r\n                <h3>Leyenda</h3>\r\n                <ul>\r\n                    <li><span style={{ color: '#2B7CE9' }}>●</span> Sismos</li>\r\n                    <li><span style={{ color: '#FA0010' }}>◆</span> Ubicaciones</li>\r\n                    <li><span style={{ color: '#2B7CE9' }}>→</span> CERCANO_A: Sismos cercanos geográficamente</li>\r\n                    <li><span style={{ color: '#2B7CE9' }}>→</span> SIMILAR_MAGNITUD: Sismos con magnitud similar</li>\r\n                    <li><span style={{ color: '#2B7CE9' }}>→</span> OCURRIDO_EN: Relación entre sismo y ubicación</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GrafoVisualizacion;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}