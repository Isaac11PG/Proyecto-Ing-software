spring.application.name=sismo-deteccion

# Configuración de la base de datos MySQL
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/sismos_db}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.sql.init.mode=always

# Neo4j config - Configuración para usar Neo4j local en Docker
spring.neo4j.uri=${SPRING_DATA_NEO4J_URI:bolt://localhost:7687}
spring.neo4j.authentication.username=${SPRING_DATA_NEO4J_USERNAME:neo4j}
spring.neo4j.authentication.password=${SPRING_DATA_NEO4J_PASSWORD:password}
spring.ai.enabled=false
spring.vectorstore.neo4j.enabled=false

# Configuración de manejo de archivos - CRUCIAL PARA SOLUCIONAR EL PROBLEMA
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.file-size-threshold=2KB
# La siguiente propiedad permite especificar donde se almacenarán los archivos temporales
# En desarrollo local puede ser una ruta absoluta; en Docker se sobrescribe por variable de entorno
spring.servlet.multipart.location=${SPRING_SERVLET_MULTIPART_LOCATION:${java.io.tmpdir}}
server.tomcat.max-swallow-size=50MB
# Base directory para los archivos temporales de Tomcat
server.tomcat.basedir=${SERVER_TOMCAT_BASEDIR:${java.io.tmpdir}/tomcat}

# Configuración para manejo de errores
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never
server.error.include-exception=false

# Logging
spring.profiles.active=dev
logging.level.org.springframework.security=DEBUG
logging.level.com.sismo=${LOGGING_LEVEL_COM_SISMO:DEBUG}
logging.level.org.springframework.web=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB:INFO}
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Seguridad
server.servlet.session.timeout=30m